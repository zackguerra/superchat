[{"C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\reportWebVitals.js":"1","C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\App.js":"2","C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\index.js":"3"},{"size":362,"mtime":1610243146318,"results":"4","hashOfConfig":"5"},{"size":3047,"mtime":1610688302711,"results":"6","hashOfConfig":"5"},{"size":590,"mtime":1610339599946,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hpn5fb",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\reportWebVitals.js",[],"C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\App.js",["15","16"],"import React, { useRef, useState } from 'react';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport 'firebase/analytics';\n\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore';\n\nimport {FaRegPaperPlane} from 'react-icons/fa';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyAeOWgis434tiPodlJyLdKVwFBnnaOL7No\",\n  authDomain: \"superchat-bbf9c.firebaseapp.com\",\n  databaseURL: \"https://superchat-bbf9c-default-rtdb.firebaseio.com\",\n  projectId: \"superchat-bbf9c\",\n  storageBucket: \"superchat-bbf9c.appspot.com\",\n  messagingSenderId: \"697438356515\",\n  appId: \"1:697438356515:web:352159d29eb03e90eedd96\"\n})\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nconst analytics = firebase.analytics();\n\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>CHAT ðŸ’¬</h1>\n        <SignOut />\n      </header>\n\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n\n    </div>\n  );\n}\n\nfunction SignIn() {\n\n  const signInWithGoogle = () => {\n    const provider = new firebase.auth.GoogleAuthProvider();\n    auth.signInWithPopup(provider);\n  }\n\n  return (\n    <>\n      <button className=\"sign-in\" onClick={signInWithGoogle}>Sign in with Google</button>\n      <p>Do not violate the community guidelines or you will be banned for life!</p>\n    </>\n  )\n\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button className=\"sign-out\" onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = firestore.collection('messages');\n  const query = messagesRef.orderBy('createdAt').limit(25);\n\n  const [messages] = useCollectionData(query, { idField: 'id' });\n\n  const [formValue, setFormValue] = useState('');\n\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n\n    const { uid, photoURL } = auth.currentUser;\n\n    await messagesRef.add({\n      text: formValue,\n      createdAt: firebase.firestore.FieldValue.serverTimestamp(),\n      uid,\n      photoURL\n    })\n\n    setFormValue('');\n    dummy.current.scrollIntoView({ behavior: 'smooth' });\n  }\n\n  return (<>\n    <main>\n\n      {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n\n      <span ref={dummy}></span>\n\n    </main>\n\n    <form onSubmit={sendMessage}>\n\n      <input value={formValue} onChange={(e) => setFormValue(e.target.value)} placeholder=\"say something nice\" />\n\n      <button type=\"submit\" disabled={!formValue}> <FaRegPaperPlane size=\"2.5em\" /> </button>\n\n    </form>\n  </>)\n}\n\n\nfunction ChatMessage(props) {\n  const { text, uid, photoURL } = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (<>\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL || 'https://api.adorable.io/avatars/23/abott@adorable.png'} />\n      <p>{text}</p>\n    </div>\n  </>)\n}\n\n\nexport default App;","C:\\Users\\zackg\\Documents\\CICCCWebDev\\superchat\\src\\index.js",[],{"ruleId":"17","severity":1,"message":"18","line":26,"column":7,"nodeType":"19","messageId":"20","endLine":26,"endColumn":16},{"ruleId":"21","severity":1,"message":"22","line":124,"column":7,"nodeType":"23","endLine":124,"endColumn":88},"no-unused-vars","'analytics' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement"]